import os
import asyncio
import discord
from discord import app_commands
from dotenv import load_dotenv
from discord.ext import commands
from pymongo import MongoClient

# L·∫•y bi·∫øn m√¥i tr∆∞·ªùng cho bot v√† MongoDB
load_dotenv()
TOKEN = os.getenv("BOT_SILLYTAVERN")
MONGO_URI = os.getenv(
    "MONGO_URI"
)  # V√≠ d·ª•: mongodb+srv://<user>:<password>@cluster0.mongodb.net/myFirstDatabase?retryWrites=true&w=majority

# K·∫øt n·ªëi MongoDB
mongo_client = MongoClient(MONGO_URI)
db = mongo_client["discord_bot"]
color_roles_collection = db["color_roles"]

intents = discord.Intents.default()
intents.members = True
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents)

# ID c·ªßa k√™nh verify v√† role member
# VERIFY_CHANNEL_ID = 1346034261391708204
# MEMBER_ROLE_ID = None  # Thay b·∫±ng ID role member n·∫øu c·∫ßn


@bot.event
async def on_ready():
    print(f"{bot.user} ƒë√£ k·∫øt n·ªëi th√†nh c√¥ng!")
    try:
        synced = await bot.tree.sync()
        print(f"ƒê√£ ƒë·ªìng b·ªô {len(synced)} l·ªánh!")
    except Exception as e:
        print(e)


# @bot.event
# async def on_member_join(member):
# T·∫°o k√™nh ri√™ng ƒë·ªÉ x√°c th·ª±c
#    overwrites = {
#        member.guild.default_role: discord.PermissionOverwrite(read_messages=False),
#        member: discord.PermissionOverwrite(
#            read_messages=True,
#            send_messages=True,
#            read_message_history=True
#        ),
#        member.guild.me: discord.PermissionOverwrite(
#            read_messages=True,
#            send_messages=True,
#            read_message_history=True,
#            manage_channels=True
#        )
#    }
#
#    verify_category = None
#    verify_channel = member.guild.get_channel(VERIFY_CHANNEL_ID)
#    if verify_channel:
#        verify_category = verify_channel.category
#
#    try:
#        temp_channel = await member.guild.create_text_channel(
#            f'verify-{member.name}',
#            overwrites=overwrites,
#            category=verify_category,
#            topic=f"K√™nh x√°c th·ª±c cho {member.name}"
#        )
#
#        embed = discord.Embed(
#            title="üîí X√°c th·ª±c th√†nh vi√™n",
#            description=f"Ch√†o m·ª´ng {member.mention} ƒë·∫øn v·ªõi server c·ªßa ch√∫ng t√¥i!",
#            color=0x00ff00
#        )
#        embed.add_field(
#            name="üìù C√¢u h·ªèi x√°c th·ª±c:",
#            value="Tr∆∞·ªõc khi tham gia server, b·∫°n c·∫ßn tr·∫£ l·ªùi c√¢u h·ªèi sau:\n**Em. chai c·ªßa m?_·∫π g·ªçi l.√† j?**",
#            inline=False
#        )
#        embed.add_field(
#            name="‚è±Ô∏è Th·ªùi gian:",
#            value="B·∫°n c√≥ 5 ph√∫t ƒë·ªÉ tr·∫£ l·ªùi c√¢u h·ªèi n√†y.",
#            inline=False
#        )
#        embed.set_footer(text="H√£y nh·∫≠p c√¢u tr·∫£ l·ªùi c·ªßa b·∫°n v√†o k√™nh n√†y.")
#
#        await temp_channel.send(embed=embed)
#        await temp_channel.send(f"{member.mention}, vui l√≤ng xem th√¥ng tin x√°c th·ª±c ·ªü tr√™n.")
#
#        def check(m):
#            return m.author == member and m.channel == temp_channel
#
#        attempts = 0
#        max_attempts = 3
#
#        while attempts < max_attempts:
#            try:
#                msg = await bot.wait_for('message', check=check, timeout=300.0)
#
#                if "c·∫≠u" in msg.content.lower():
#                    # T√¨m role member
#                    member_role = discord.utils.get(member.guild.roles, name="üòÄ Member")
#                    if not member_role and MEMBER_ROLE_ID:
#                        member_role = member.guild.get_role(MEMBER_ROLE_ID)
#
#                    if member_role:
#                        await member.add_roles(member_role)
#
#                        success_embed = discord.Embed(
#                            title="‚úÖ X√°c th·ª±c th√†nh c√¥ng!",
#                            description="B·∫°n ƒë√£ ƒë∆∞·ª£c c·∫•p quy·ªÅn truy c·∫≠p v√†o server.",
#                            color=0x00ff00
#                        )
#                        success_embed.add_field(
#                            name="üîî L∆∞u √Ω:",
#                            value="K√™nh n√†y s·∫Ω t·ª± ƒë·ªông x√≥a sau 10 gi√¢y."
#                        )
#
#                        await temp_channel.send(embed=success_embed)
#
#                        try:
#                            welcome_channel = discord.utils.get(member.guild.channels, name="ch√†o-m·ª´ng")
#                            if welcome_channel:
#                                welcome_embed = discord.Embed(
#                                    title="üëã Th√†nh vi√™n m·ªõi!",
#                                    description=f"Ch√†o m·ª´ng {member.mention} ƒë√£ tham gia server c·ªßa ch√∫ng ta!",
#                                    color=0x00a2ff
#                                )
#                                await welcome_channel.send(embed=welcome_embed)
#                        except Exception as e:
#                            print(f"Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn ch√†o m·ª´ng: {e}")
#
#                        await asyncio.sleep(10)
#                        await temp_channel.delete()
#                        return
#                    else:
#                        await temp_channel.send("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y role 'üòÄ Member'. Vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n.")
#                else:
#                    attempts += 1
#                    remaining = max_attempts - attempts
#
#                    if remaining > 0:
#                        fail_embed = discord.Embed(
#                            title="‚ùå X√°c th·ª±c th·∫•t b·∫°i",
#                            description=f"C√¢u tr·∫£ l·ªùi kh√¥ng ch√≠nh x√°c. B·∫°n c√≤n {remaining} l·∫ßn th·ª≠.",
#                            color=0xff0000
#                        )
#                        await temp_channel.send(embed=fail_embed)
#                    else:
#                        break
#
#            except asyncio.TimeoutError:
#                timeout_embed = discord.Embed(
#                    title="‚è±Ô∏è H·∫øt th·ªùi gian",
#                    description="Th·ªùi gian x√°c th·ª±c ƒë√£ h·∫øt. Vui l√≤ng tho√°t server r·ªìi join l·∫°i ƒë·ªÉ th·ª≠ l·∫°i.",
#                    color=0xff0000
#                )
#                await temp_channel.send(embed=timeout_embed)
#                await asyncio.sleep(10)
#                await temp_channel.delete()
#                return
#
#        too_many_attempts = discord.Embed(
#            title="üö´ Qu√° nhi·ªÅu l·∫ßn th·ª≠",
#            description="B·∫°n ƒë√£ th·ª≠ sai qu√° nhi·ªÅu l·∫ßn. Vui l√≤ng tho√°t server v√† tham gia l·∫°i sau.",
#            color=0xff0000
#        )
#        await temp_channel.send(embed=too_many_attempts)
#        await asyncio.sleep(10)
#        await temp_channel.delete()
#
#    except Exception as e:
#        print(f"L·ªói khi t·∫°o k√™nh x√°c th·ª±c: {e}")
#        try:
#            channel = await member.create_dm()
#            await channel.send("C√≥ l·ªói x·∫£y ra khi t·∫°o k√™nh x√°c th·ª±c. Vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n.")
#        except:
#            pass


# L·ªánh slash t·∫°o role m√†u s·ª≠ d·ª•ng MongoDB ƒë·ªÉ l∆∞u d·ªØ li·ªáu
@bot.tree.command(
    name="namecolor", description="T·∫°o role m√†u cho b·∫°n (ch·ªâ d√πng ƒë·ªÉ hi·ªÉn th·ªã m√†u)"
)
@app_commands.describe(
    color="M√£ m√†u theo d·∫°ng HEX (v√≠ d·ª•: #FF0000). Truy c·∫≠p https://www.color-hex.com/ ƒë·ªÉ ch·ªçn m√†u."
)
async def namecolor(interaction: discord.Interaction, color: str):
    member = interaction.user

    # Ki·ªÉm tra n·∫øu ng∆∞·ªùi d√πng c√≥ role 'üòÄ Member'
    member_role = discord.utils.get(member.guild.roles, name="üòÄ Member")
    if member_role not in member.roles:
        await interaction.response.send_message(
            "B·∫°n c·∫ßn c√≥ role 'üòÄ Member' ƒë·ªÉ s·ª≠ d·ª•ng l·ªánh n√†y.", ephemeral=True
        )
        return

    if not color.startswith("#") or len(color) != 7:
        await interaction.response.send_message(
            "M√£ m√†u kh√¥ng h·ª£p l·ªá. Vui l√≤ng s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HEX (v√≠ d·ª•: #FF0000). Truy c·∫≠p https://www.color-hex.com/ ƒë·ªÉ ch·ªçn m√†u.",
            ephemeral=True,
        )
        return

    # Ki·ªÉm tra trong MongoDB xem ng∆∞·ªùi d√πng ƒë√£ c√≥ role m√†u n√†o trong server n√†y ch∆∞a
    existing = color_roles_collection.find_one(
        {"user_id": member.id, "guild_id": member.guild.id}
    )
    if existing:
        old_role = member.guild.get_role(existing["role_id"])
        if old_role:
            try:
                await old_role.delete(reason="Thay th·∫ø role m√†u c≈© b·ªüi role m·ªõi")
            except Exception as e:
                await interaction.response.send_message(
                    "Kh√¥ng th·ªÉ x√≥a role m√†u c≈©. Vui l√≤ng th·ª≠ l·∫°i.", ephemeral=True
                )
                return
        color_roles_collection.delete_one(
            {"user_id": member.id, "guild_id": member.guild.id}
        )

    try:
        color_value = int(color[1:], 16)
        discord_color = discord.Color(color_value)
    except ValueError:
        await interaction.response.send_message(
            "M√£ m√†u kh√¥ng h·ª£p l·ªá. Vui l√≤ng ki·ªÉm tra l·∫°i.", ephemeral=True
        )
        return

    # ƒê·∫∑t t√™n role c·ªë ƒë·ªãnh l√† "name color" cho t·∫•t c·∫£ c√°c role m√†u
    role_name = "name color"
    try:
        new_role = await interaction.guild.create_role(
            name=role_name,
            color=discord_color,
            permissions=discord.Permissions.none(),  # Role ch·ªâ mang t√≠nh th·∫©m m·ªπ
            reason=f"ƒê∆∞·ª£c t·∫°o b·ªüi {interaction.user.name} ƒë·ªÉ t·∫°o m√†u cho t√™n",
        )

        # ch·ªù 1 gi√¢y ƒë·ªÉ role ƒë∆∞·ª£c c·∫≠p nh·∫≠t
        await asyncio.sleep(1)

        # ƒê·∫©y role l√™n v·ªã tr√≠ cao ƒë·ªÉ ∆∞u ti√™n hi·ªÉn th·ªã m√†u
        bot_top_role = member.guild.me.top_role
        try:
            await new_role.edit(position=bot_top_role.position - 1)
        except Exception as e:
            print(f"Kh√¥ng th·ªÉ thay ƒë·ªïi v·ªã tr√≠ role: {e}")

        await member.add_roles(new_role)
        # L∆∞u th√¥ng tin role v√†o MongoDB
        color_roles_collection.insert_one(
            {
                "user_id": member.id,
                "guild_id": member.guild.id,
                "role_id": new_role.id,
                "role_name": new_role.name,
                "color": color,
            }
        )

        embed = discord.Embed(
            title="‚úÖ Role m√†u ƒë√£ ƒë∆∞·ª£c t·∫°o",
            description=f"{member.mention} ƒë√£ t·∫°o role m√†u **{new_role.name}** v·ªõi m√†u {color}.",
            color=discord_color,
        )
        embed.set_footer(text="Truy c·∫≠p https://www.color-hex.com/ ƒë·ªÉ ch·ªçn m√†u.")
        # Ph·∫£n h·ªìi c√¥ng khai cho m·ªçi ng∆∞·ªùi c√πng th·∫•y
        await interaction.response.send_message(embed=embed)
    except Exception as e:
        await interaction.response.send_message(
            f"Kh√¥ng th·ªÉ t·∫°o role: {str(e)}", ephemeral=True
        )


# L·ªánh slash x√≥a role m√†u d·ª±a tr√™n d·ªØ li·ªáu trong MongoDB
@bot.tree.command(name="deletecolor", description="X√≥a role m√†u m√† b·∫°n ƒë√£ t·∫°o")
async def deletecolor(interaction: discord.Interaction):
    member = interaction.user
    existing = color_roles_collection.find_one(
        {"user_id": member.id, "guild_id": member.guild.id}
    )
    if not existing:
        await interaction.response.send_message(
            "B·∫°n kh√¥ng c√≥ role m√†u n√†o ƒë∆∞·ª£c t·∫°o s·∫µn.", ephemeral=True
        )
        return
    role_to_delete = member.guild.get_role(existing["role_id"])
    if not role_to_delete:
        await interaction.response.send_message(
            "Role c·ªßa b·∫°n kh√¥ng t·ªìn t·∫°i.", ephemeral=True
        )
        color_roles_collection.delete_one(
            {"user_id": member.id, "guild_id": member.guild.id}
        )
        return
    try:
        await role_to_delete.delete(reason="X√≥a role m√†u theo y√™u c·∫ßu c·ªßa ng∆∞·ªùi d√πng")
        color_roles_collection.delete_one(
            {"user_id": member.id, "guild_id": member.guild.id}
        )
        await interaction.response.send_message(
            "Role m√†u c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√≥a th√†nh c√¥ng."
        )
    except Exception as e:
        await interaction.response.send_message(
            f"Kh√¥ng th·ªÉ x√≥a role c·ªßa b·∫°n: {e}", ephemeral=True
        )


@bot.tree.command(name="status", description="Ki·ªÉm tra tr·∫°ng th√°i c·ªßa bot")
async def status(interaction: discord.Interaction):
    embed = discord.Embed(
        title="üìä Tr·∫°ng th√°i Bot",
        description="Bot ƒëang ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng!",
        color=0x00FF00,
    )
    embed.add_field(name="ü§ñ T√™n bot", value=bot.user.name, inline=True)
    embed.add_field(
        name="üïí ƒê·ªô tr·ªÖ", value=f"{round(bot.latency * 1000)}ms", inline=True
    )
    embed.add_field(name="üè† S·ªë l∆∞·ª£ng server", value=str(len(bot.guilds)), inline=True)

    await interaction.response.send_message(embed=embed)


bot.run(TOKEN)

